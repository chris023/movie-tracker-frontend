{"version":3,"sources":["util/material-ui/theme.js","util/router/history.js","util/redux/reducers/index.js","util/redux/reducers/moviesReducer.js","util/redux/reducers/loginReducer.js","util/redux/reducers/favoritesReducer.js","util/redux/actions/index.js","util/TheMovieDB/TheMovieDB.js","util/redux/sagas/index.js","util/redux/store.js","components/movie/Poster.js","paths/index.js","paths/View.js","paths/Auth/index.js","paths/Auth/Login/View.js","paths/Movie/index.js","paths/Movie/View.js","App.js","index.js"],"names":["Theme","createMuiTheme","typography","useNextVariants","overrides","MuiBackdrop","root","top","backgroundColor","MuiButton","label","textTransform","palette","type","primary","light","main","kindaDark","dark","secondary","text","createBrowserHistory","combineReducers","movies","state","arguments","length","undefined","action","login","success","data","Object","objectSpread","user","favorites","fetchFailed","e","setMovies","setFavorites","loginSuccess","loginFailed","registerSuccess","registerFailed","TheMovieDB","fetchMovies","fetchFavorites","attemptLogin","attemptRegister","addFavorite","removeFavorite","mySaga","regenerator_default","a","wrap","_context2","prev","next","call","asyncToGenerator","mark","_callee","response","_context","fetch","tmdb","sent","abrupt","json","stop","put","t0","_marked","user_id","_context3","results","alert","_marked2","_context4","id","_marked3","_context5","_marked4","_context6","_marked5","_context7","_marked6","_context8","takeLatest","_marked7","sagaMiddleware","createSagaMiddleware","allStoreEnhancers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","run","withRouter","withStyles","theme","_iconButton","height","width","position","cursor","favoritedIcon","color","iconButton","defineProperty","poster","zIndex","overlay","boxSizing","filter","transition","background","border","concat","connect","dispatch","movie","_ref","classes","history","_useState","useState","_useState2","slicedToArray","isFavorite","setFavorite","useEffect","find","favorite","movie_id","react_default","createElement","index_es","className","onClick","target","push","src","poster_path","alt","title","release_date","vote_average","overview","Favorite_default","FavoriteBorder_default","View","paper","minHeight","appBar","drawer","appBarSpacer","mixins","toolbar","body","display","gridTemplateColumns","drawerTitle","marginTop","spacing","unit","paddingLeft","libraryList","listItem","padding","pushRight","marginLeft","_ref3","logout","anchor","setAnchor","_useState3","_useState4","open","setOpen","closeMenu","react_router_dom","to","Home_default","_ref2","Person_default","anchorEl","onClose","PaperProps","style","variant","button","disableGutters","LocalMovies_default","square","container","map","item","xs","key","movie_Poster","Auth","actions","margin","activePanel","borderBottom","borderTopRightRadius","shape","borderRadius","borderTopLeftRadius","content","borderTop","flexDirection","paddingTop","paddingBottom","inActivePanel","submitButton","textField","justifyContent","authenticated","sendLogin","sendRegister","name","setName","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","password2","setPassword2","_useState9","_useState10","panel","setPanel","changePanel","innerText","toLowerCase","loginOptions","Fragment","value","onChange","required","registerOptions","react_router","buttonLeft","buttonRight","preventDefault","split","toUpperCase","slice","overflowY","minWidth","backdropImage","backIcon","left","dialogContainer","alignItems","dialogContent","dialogContentFilter","dialogPaper","dialogPosterContainer","boxShadow","bottom","right","dialogText","maxHeight","overflow","dialogTextContentContainer","movieOverview","textShadow","movieSubheader","ratingContainer","marginRight","ratingMask","ratingIcon","ratingBackgroundIcon","match","params","vote_count","video","popularity","original_language","original_title","genre_ids","backdrop_path","adult","setMovie","result","Number","ArrowBack_default","fullWidth","maxWidth","backgroundImage","backgroundSize","backgroundRepeat","__","i","StarBorder_default","fontSize","Star_default","inline","path","component","Root","MovieDetail","ReactDOM","render","es","core_styles","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6c4d01da.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/'\n\nconst Theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        top: 64,\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n    },\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      light: '#252627',\n      main: '#181818',\n      kindaDark: '#242424',\n      dark: '#070707',\n    },\n    secondary: {\n      main: '#42dbff',\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#c8c6c8',\n    },\n  },\n})\n\nexport default Theme\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()\n","import { combineReducers } from 'redux'\nimport movies from './moviesReducer'\nimport login from './loginReducer'\nimport favorites from './favoritesReducer'\n\nexport default combineReducers({\n  movies,\n  login,\n  favorites,\n})\n","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'MOVIES/FETCH_FAILED':\n      return {}\n    case 'MOVIES/SET':\n      return action.movies\n    default:\n      return state\n  }\n}\n","export default (state = { success: null, data: {} }, action) => {\n  switch (action.type) {\n    case 'LOGIN/FAILED':\n      return { success: false }\n    case 'LOGIN/SUCCESS':\n      return { success: true, ...action.user }\n    case 'AUTH/LOGOUT':\n      return { success: null, data: {} }\n    default:\n      return state\n  }\n}\n","export default (state = { data: [] }, action) => {\n  switch (action.type) {\n    case 'FAVORITES/SET':\n      return action.favorites\n    default:\n      return state\n  }\n}\n","export const fetchFailed = e => ({\n  type: 'MOVIES/FETCH_FAILED',\n  e,\n})\n\nexport const setMovies = movies => ({\n  type: 'MOVIES/SET',\n  movies,\n})\n\nexport const getFavorites = user_id => ({\n  type: 'FAVORITES/GET',\n  user_id,\n})\n\nexport const setFavorites = favorites => ({\n  type: 'FAVORITES/SET',\n  favorites,\n})\n\nexport const loginSuccess = user => ({\n  type: 'LOGIN/SUCCESS',\n  user,\n})\n\nexport const loginFailed = () => ({\n  type: 'LOGIN/FAILED',\n})\n\nexport const attemptLogin = user => ({\n  type: 'LOGIN/ATTEMPT',\n  user,\n})\n\nexport const attemptRegister = user => ({\n  type: 'REGISTER/ATTEMPT',\n  user,\n})\n\nexport const registerSuccess = user => ({\n  type: 'REGISTER/SUCCESS',\n  user,\n})\n\nexport const registerFailed = () => ({\n  type: 'REGISTER/FAILED',\n})\n\nexport const addFav = data => ({\n  type: 'FAVORITE/ADD',\n  data,\n})\n\nexport const removeFav = data => ({\n  type: 'FAVORITE/REMOVE',\n  data,\n})\n","export default '9c5d8e6720b52842439640750f777880'\n","/* eslint-disable no-unused-vars */\nimport {\n  fetchFailed,\n  getFavorites,\n  loginFailed,\n  loginSuccess,\n  registerFailed,\n  registerSuccess,\n  setFavorites,\n  setMovies,\n} from '../actions'\nimport tmdb from '../../TheMovieDB/TheMovieDB'\nimport db_path from '../../../config'\n\nimport { takeLatest, put, call } from 'redux-saga/effects'\n\nfunction* fetchMovies() {\n  try {\n    const movies = yield call(async () => {\n      const response = await fetch(\n        'https://api.themoviedb.org/3/movie/popular?api_key=' + tmdb\n      )\n      return response.json()\n    })\n    yield put(setMovies(movies))\n  } catch (e) {\n    yield put(fetchFailed(e))\n    return\n  }\n}\n\nfunction* fetchFavorites(user_id) {\n  try {\n    // const favorites = yield call(async () => {\n    //   const response = await fetch(`${db_path}/users/${user_id}/favorites`)\n    //   return response.json()\n    // })\n    yield put(setFavorites({ data: { results: [] } }))\n  } catch (e) {\n    alert(e)\n    // yield put(favoritesFetchFailed())\n    return\n  }\n}\n\nfunction* attemptLogin() {\n  try {\n    // const response = yield call(async () => {\n    //   const response = await fetch(db_path + '/users', {\n    //     method: 'POST',\n    //     body: JSON.stringify(user),\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   })\n    //   return response.json()\n    // })\n    yield put(loginSuccess({ data: { id: 1 } }))\n    // yield put(getFavorites(response.data.id))\n  } catch (e) {\n    yield put(loginFailed())\n    return\n  }\n}\n\nfunction* attemptRegister(user) {\n  try {\n    // const response = yield call(async () => {\n    //   const response = await fetch(db_path + '/users/new', {\n    //     method: 'POST',\n    //     body: JSON.stringify(user),\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   })\n    //   return response.json()\n    // })\n    yield put(registerSuccess({ id: 1 }))\n  } catch (e) {\n    yield put(registerFailed())\n    return\n  }\n}\n\nfunction* addFavorite(data) {\n  try {\n    // yield call(async () => {\n    //   await fetch(db_path + '/users/favorites/new', {\n    //     method: 'POST',\n    //     body: JSON.stringify(data),\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //   })\n    // })\n    yield\n  } catch (e) {\n    alert(e)\n    return\n  }\n}\n\nfunction* removeFavorite(data) {\n  try {\n    // yield call(async () => {\n    //   await fetch(\n    //     `${db_path}/users/${data.user_id}/favorites/${data.movie_id}`,\n    //     { method: 'delete' }\n    //   ).then(response => response.json())\n    // })\n    yield\n  } catch (e) {\n    alert(e)\n    return\n  }\n}\n\nexport default function* mySaga() {\n  yield takeLatest('MOVIES/FETCH', fetchMovies)\n  yield takeLatest('LOGIN/ATTEMPT', action => attemptLogin(action.user))\n  yield takeLatest('REGISTER/ATTEMPT', action => attemptRegister(action.user))\n  yield takeLatest('FAVORITE/ADD', action => addFavorite(action.data))\n  yield takeLatest('FAVORITE/REMOVE', action => removeFavorite(action.data))\n  yield takeLatest('FAVORITES/GET', action => fetchFavorites(action.user_id))\n}\n","import { compose } from 'redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport mySaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst allStoreEnhancers = compose(\n  applyMiddleware(sagaMiddleware),\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n    compose\n)\n\nconst store = createStore(rootReducer, allStoreEnhancers)\n\nsagaMiddleware.run(mySaga)\n\nexport { store }\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, IconButton, withStyles } from '@material-ui/core'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { addFav, removeFav } from '../../util/redux/actions'\n\nconst styles = theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    position: 'relative',\n    cursor: 'pointer',\n  },\n  favoritedIcon: {\n    color: '#ddd',\n  },\n  iconButton: {\n    color: '#999',\n    ['&:hover']: {\n      color: '#fff !important',\n    },\n    zIndex: 10,\n  },\n  poster: {\n    width: '100%',\n    height: '100%',\n    zIndex: '-10',\n  },\n  overlay: {\n    boxSizing: 'border-box',\n    height: '100%',\n    filter: 'opacity(0)',\n    position: 'absolute',\n    transition: '.2s',\n    top: 0,\n    width: '100%',\n    ['&:hover']: {\n      background: '#0006',\n      border: `solid 2px ${theme.palette.secondary.main}`,\n      filter: 'opacity(1)',\n    },\n  },\n})\n\nconst Poster = ({\n  addFavorite,\n  classes,\n  history,\n  movie,\n  removeFavorite,\n  user_id,\n  favorites,\n}) => {\n  const [isFavorite, setFavorite] = useState(false)\n\n  useEffect(() => {\n    if (favorites.find(favorite => movie.id === favorite.movie_id))\n      return setFavorite(true)\n    return setFavorite(false)\n  }, [favorites, movie.id])\n\n  const toggleFavorite = () => {\n    switch (isFavorite) {\n      case true:\n        removeFavorite({\n          movie_id: movie.id,\n          user_id,\n        })\n        setFavorite(prev => !prev)\n        break\n      case false:\n        addFavorite({\n          movie_id: movie.id,\n          user_id,\n          title: movie.title,\n          poster_path: movie.poster_path,\n          release_date: movie.release_date,\n          vote_average: movie.vote_average,\n          overview: movie.overview,\n        })\n        setFavorite(prev => !prev)\n        break\n      default:\n        return\n    }\n  }\n\n  const goToMovie = e => {\n    if (e.target.id === 'overlay') history.push('/movie/' + movie.id)\n  }\n\n  return (\n    <Card className={classes.root} onClick={goToMovie}>\n      <img\n        className={classes.poster}\n        src={'http://image.tmdb.org/t/p/w400' + movie.poster_path}\n        alt={movie.title}\n      />\n      <div className={classes.overlay} id=\"overlay\">\n        <IconButton onClick={toggleFavorite} className={classes.iconButton}>\n          {isFavorite ? (\n            <FavoriteIcon className={classes.favoritedIcon} />\n          ) : (\n            <FavoriteBorderIcon />\n          )}\n        </IconButton>\n      </div>\n    </Card>\n  )\n}\n\nPoster.propTypes = {\n  classes: PropTypes.object,\n  movie: PropTypes.object,\n  addFavorite: PropTypes.func,\n  history: PropTypes.object,\n  removeFavorite: PropTypes.func,\n  user_id: PropTypes.number,\n  favorites: PropTypes.array,\n}\n\nconst mapStateToProps = state => ({\n  favorites: state.favorites.data,\n  user_id: state.login.data.id,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addFavorite: movie => dispatch(addFav(movie)),\n  removeFavorite: movie => dispatch(removeFav(movie)),\n})\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Poster)\n","import View from './View'\n\nexport default View\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  AppBar,\n  Drawer,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person'\nimport HomeIcon from '@material-ui/icons/Home'\nimport MovieIcon from '@material-ui/icons/LocalMovies'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Poster } from '../components/movie'\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.paper,\n    minHeight: '100vh',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  body: {\n    display: 'grid',\n    gridTemplateColumns: '241px 1fr',\n  },\n  drawerTitle: {\n    marginTop: `${theme.spacing.unit * 4}px`,\n    paddingLeft: theme.spacing.unit * 4,\n  },\n  libraryList: {\n    color: theme.palette.text.secondary,\n    width: 240,\n  },\n  listItem: {\n    paddingLeft: theme.spacing.unit * 6,\n  },\n  paper: {\n    padding: theme.spacing.unit * 4,\n  },\n  pushRight: {\n    marginLeft: 'auto',\n  },\n})\n\nconst View = ({ classes, fetchMovies, movies, logout }) => {\n  const [anchor, setAnchor] = useState(null)\n  const [open, setOpen] = useState(false)\n  const openMenu = ({ target }) => {\n    setOpen(true)\n    setAnchor(target)\n  }\n  const closeMenu = () => {\n    setOpen(false)\n    setAnchor(null)\n  }\n\n  const handleLogout = () => {\n    closeMenu()\n    logout()\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [fetchMovies])\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Link to=\"/\">\n            <IconButton>\n              <HomeIcon />\n            </IconButton>\n          </Link>\n          <div className={classes.pushRight}>\n            <IconButton onClick={openMenu}>\n              <PersonIcon />\n            </IconButton>\n            <Menu\n              anchorEl={anchor}\n              open={open}\n              onClose={closeMenu}\n              PaperProps={{\n                style: {\n                  width: 200,\n                },\n              }}\n            >\n              <MenuItem onClick={handleLogout}>Log Out</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.body}>\n        <Drawer\n          variant=\"permanent\"\n          anchor=\"left\"\n          PaperProps={{\n            style: {\n              backgroundColor: '#242424',\n            },\n          }}\n        >\n          <div className={classes.appBarSpacer} />\n          <Typography\n            color=\"secondary\"\n            variant=\"h4\"\n            className={classes.drawerTitle}\n          >\n            Library\n          </Typography>\n          <List className={classes.libraryList}>\n            <ListItem button disableGutters className={classes.listItem}>\n              <MovieIcon />\n              <ListItemText primary={'Movies'} />\n            </ListItem>\n          </List>\n        </Drawer>\n        <Paper square className={classes.paper}>\n          <div className={classes.appBarSpacer} />\n          <Grid container spacing={32}>\n            {movies &&\n              movies.results &&\n              movies.results.map(movie => (\n                <Grid item xs={2} key={movie.id}>\n                  <Poster movie={movie} />\n                </Grid>\n              ))}\n          </Grid>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n\nView.propTypes = {\n  classes: PropTypes.object,\n  fetchMovies: PropTypes.func,\n  movies: PropTypes.object,\n  logout: PropTypes.func,\n}\n\nconst mapStateToProps = ({ movies }) => ({\n  movies,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMovies: () => dispatch({ type: 'MOVIES/FETCH' }),\n  logout: () => dispatch({ type: 'AUTH/LOGOUT' }),\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(View)\n","import Auth from './Login/View'\n\nexport default Auth\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  TextField,\n  withStyles,\n} from '@material-ui/core'\nimport { Redirect } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport { attemptLogin, attemptRegister } from '../../../util/redux/actions'\n\nconst styles = theme => ({\n  root: {},\n  actions: {\n    padding: 0,\n    margin: 0,\n  },\n  activePanel: {\n    borderBottom: 'none',\n    borderTopRightRadius: `${theme.shape.borderRadius}px !important`,\n    borderTopLeftRadius: `${theme.shape.borderRadius}px !important`,\n  },\n  button: {\n    borderRadius: 0,\n    height: 44,\n    margin: 0,\n    width: '50%',\n  },\n  content: {\n    border: 'solid 1px #6d6d6d',\n    borderTop: 'none',\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n  },\n  inActivePanel: {\n    border: 'none',\n    borderBottom: 'solid 1px #6d6d6d',\n  },\n  submitButton: {\n    margin: `${theme.spacing.unit}px 0`,\n    width: '100%',\n  },\n  textField: {\n    width: 250,\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n})\n\nconst View = ({ classes, sendLogin, sendRegister, authenticated }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('tman2272@aol.com')\n  const [password, setPassword] = useState('password')\n  const [password2, setPassword2] = useState('')\n  const [panel, setPanel] = useState('login')\n\n  const changePanel = e => {\n    setPanel(e.target.innerText.toLowerCase())\n    setName('')\n    setEmail('')\n    setPassword('')\n    setPassword2('')\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    switch (panel) {\n      case 'login':\n        return sendLogin({ email, password })\n      case 'register':\n        return sendRegister({ name, email, password })\n      default:\n        return\n    }\n  }\n\n  const loginOptions = (\n    <>\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.textField}\n        required\n      />\n      <TextField\n        label=\"Password\"\n        value={password}\n        type=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.textField}\n        required\n      />\n    </>\n  )\n\n  const registerOptions = (\n    <>\n      <TextField\n        label=\"Name\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.textField}\n        required\n      />\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        value={email}\n        onChange={e => setEmail(e.target.value)}\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.textField}\n        required\n      />\n      <TextField\n        label=\"Password\"\n        value={password}\n        type=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.textField}\n        required\n      />\n      <TextField\n        label=\"Repeat Password\"\n        value={password2}\n        type=\"password\"\n        onChange={e => setPassword2(e.target.value)}\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.textField}\n        required\n      />\n    </>\n  )\n\n  return (\n    <>\n      {authenticated && <Redirect to=\"/\" />}\n      <Dialog open={true} className={classes.root}>\n        <form>\n          <DialogActions className={classes.actions}>\n            <Button\n              className={\n                panel === 'login'\n                  ? `${classes.button} ${classes.buttonLeft} ${\n                      classes.activePanel\n                    }`\n                  : `${classes.button} ${classes.buttonLeft} ${\n                      classes.inActivePanel\n                    }`\n              }\n              variant=\"outlined\"\n              onClick={changePanel}\n            >\n              Login\n            </Button>\n            <Button\n              className={\n                panel === 'register'\n                  ? `${classes.button} ${classes.buttonRight} ${\n                      classes.activePanel\n                    }`\n                  : `${classes.button} ${classes.buttonRight} ${\n                      classes.inActivePanel\n                    }`\n              }\n              variant=\"outlined\"\n              onClick={changePanel}\n            >\n              Register\n            </Button>\n          </DialogActions>\n          <DialogContent className={classes.content}>\n            {panel === 'login' ? loginOptions : registerOptions}\n            <DialogActions>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                type=\"submit\"\n                className={classes.submitButton}\n                onClick={submitHandler}\n              >\n                {panel.split('')[0].toUpperCase() + panel.slice(1)}\n              </Button>\n            </DialogActions>\n          </DialogContent>\n        </form>\n      </Dialog>\n    </>\n  )\n}\n\nView.propTypes = {\n  classes: PropTypes.object,\n  sendLogin: PropTypes.func,\n  sendRegister: PropTypes.func,\n  authenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.login.success,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  sendLogin: user => dispatch(attemptLogin(user)),\n  sendRegister: user => dispatch(attemptRegister(user)),\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(View)\n","import View from './View'\n\nexport default View\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Dialog,\n  DialogContent,\n  IconButton,\n  Paper,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { compose } from 'recompose'\n\nconst styles = theme => ({\n  root: {\n    overflowY: 'visible',\n    minWidth: 920,\n  },\n  backdropImage: {\n    width: '100%',\n  },\n  backIcon: {\n    border: 'solid 3px #fff',\n    left: theme.spacing.unit * 6,\n    position: 'fixed',\n    top: theme.spacing.unit * 4 + 48,\n    zIndex: 999999999,\n  },\n  dialogContainer: {\n    alignItems: 'flex-end',\n  },\n  dialogContent: {\n    height: 350,\n    padding: 0,\n    position: 'relative',\n  },\n  dialogContentFilter: {\n    background: '#000',\n    filter: 'opacity(.45)',\n    height: '100%',\n    left: 0,\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  dialogPaper: {\n    overflowY: 'visible',\n  },\n  dialogPosterContainer: {\n    boxSizing: 'border-box',\n    boxShadow: `0px 5px 5px 0px rgb(255, 255, 255, .1)`,\n    bottom: theme.spacing.unit * 10,\n    height: 450,\n    position: 'absolute',\n    right: theme.spacing.unit * 10,\n    width: 300,\n  },\n  dialogText: {\n    background: '#000a',\n    borderRadius: 4,\n    maxHeight: 450 - theme.spacing.unit * 28,\n    overflow: 'scroll',\n    padding: theme.spacing.unit * 4,\n  },\n  dialogTextContentContainer: {\n    boxSizing: 'border-box',\n    display: 'grid',\n    gridTemplateColumns: `1fr ${300 + theme.spacing.unit * 10}px`,\n    height: '100%',\n    left: 0,\n    padding: `${theme.spacing.unit * 6}px ${theme.spacing.unit * 10}px`,\n    position: 'absolute',\n    top: 0,\n  },\n  movieOverview: {\n    paddingTop: theme.spacing.unit * 3,\n    textShadow: '#000 0px 0px 4px',\n  },\n  movieSubheader: {\n    alignItems: 'flex-end',\n    display: 'flex',\n  },\n  poster: {\n    height: '100%',\n    width: '100%',\n  },\n  ratingContainer: {\n    marginRight: theme.spacing.unit,\n    position: 'relative',\n    width: 175,\n  },\n  ratingMask: {\n    display: 'flex',\n    left: 0,\n    position: 'absolute',\n    top: 0,\n    overflow: 'hidden',\n  },\n  ratingIcon: {\n    color: '#fff',\n  },\n  ratingBackgroundIcon: {\n    color: '#999',\n  },\n})\n\nconst Poster = ({\n  classes,\n  history,\n  movies,\n  match: {\n    params: { movie_id },\n  },\n}) => {\n  const [open, setOpen] = useState(true)\n  const [movie, setMovie] = useState({\n    vote_count: 0,\n    id: null,\n    video: null,\n    vote_average: 0,\n    title: '',\n    popularity: 0,\n    poster_path: '',\n    original_language: null,\n    original_title: '',\n    genre_ids: [],\n    backdrop_path: '',\n    adult: null,\n    overview: '',\n    release_date: '',\n  })\n\n  const closeDialog = () => {\n    setOpen(false)\n    history.push('/')\n  }\n\n  useEffect(() => {\n    if (movies) setMovie(movies.find(result => result.id === Number(movie_id)))\n  }, [movies, movie_id])\n\n  return (\n    <>\n      <Link to=\"/\">\n        <IconButton className={classes.backIcon}>\n          <ArrowBackIcon />\n        </IconButton>\n      </Link>\n      <Dialog\n        className={classes.root}\n        open={open}\n        fullWidth\n        maxWidth=\"xl\"\n        onClose={closeDialog}\n        PaperProps={{ classes: { root: classes.dialogPaper } }}\n        classes={{\n          container: classes.dialogContainer,\n        }}\n      >\n        <DialogContent\n          className={classes.dialogContent}\n          style={{\n            backgroundImage: `url(${'http://image.tmdb.org/t/p/w1280' +\n              movie.backdrop_path})`,\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n          }}\n        />\n        <div className={classes.dialogContentFilter} />\n        <Paper className={classes.dialogPosterContainer}>\n          <img\n            className={classes.poster}\n            src={'http://image.tmdb.org/t/p/w500' + movie.poster_path}\n            alt={movie.title}\n          />\n        </Paper>\n        <div className={classes.dialogTextContentContainer}>\n          <div className={classes.dialogText}>\n            <Typography variant=\"h4\">{movie.title}</Typography>\n            <div className={classes.movieSubheader}>\n              <span className={classes.ratingContainer}>\n                {[0, 1, 2, 3, 4].map((__, i) => (\n                  <StarBorderIcon\n                    key={'filled' + i}\n                    fontSize=\"large\"\n                    className={classes.ratingBackgroundIcon}\n                  />\n                ))}\n                <span\n                  className={classes.ratingMask}\n                  style={{\n                    width: `calc(175px * ${movie.vote_average / 10} `,\n                  }}\n                >\n                  {[0, 1, 2, 3, 4].map((__, i) => (\n                    <StarIcon\n                      key={'filled' + i}\n                      fontSize=\"large\"\n                      className={classes.ratingIcon}\n                    />\n                  ))}\n                </span>\n              </span>\n              <div>\n                <Typography inline variant=\"subtitle1\">\n                  {movie.release_date + ' '}\n                </Typography>\n                <Typography inline>\n                  {movie.original_language && `(${movie.original_language})`}\n                </Typography>\n              </div>\n            </div>\n            <Typography variant=\"subtitle1\" className={classes.movieOverview}>\n              {movie.overview}\n            </Typography>\n          </div>\n          <div />\n        </div>\n      </Dialog>\n    </>\n  )\n}\n\nPoster.propTypes = {\n  classes: PropTypes.object,\n  history: PropTypes.object,\n  match: PropTypes.object,\n  movies: PropTypes.array,\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies.results,\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps)\n)(Poster)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Root from './paths'\nimport Auth from './paths/Auth'\nimport MovieDetail from './paths/Movie'\n\nfunction App({ authenticated }) {\n  return (\n    <>\n      {!authenticated && <Auth />}\n      <Route path=\"/\" component={Root} />\n      <Route path=\"/movie/:movie_id\" component={MovieDetail} />\n    </>\n  )\n}\n\nApp.propTypes = {\n  authenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.login.success,\n})\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport theme from './util/material-ui/theme'\nimport history from './util/router/history'\nimport { store } from './util/redux'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}